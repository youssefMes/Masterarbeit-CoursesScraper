version: "3.9"

services:
    nginx: 
        container_name: cs_nginx
        restart: always
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile.prod
            args:
                VITE_REACT_APP_API_URL: https://cs-studiengaenge.de:8000
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./server/static:/srv/app/static
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        depends_on: 
            - server
    server:
        container_name: cs_server
        restart: always
        build:
            context: ./server
            dockerfile: Dockerfile.prod
        volumes:
            - ./server/static:/srv/app/static   
        entrypoint: /srv/app/wsgi-entrypoint.sh
        ports:
            - 8000:8000
        environment:
            - ENV=prod
        depends_on:
            postgres:
                condition: service_healthy
    certbot:
        container_name: cs_certbot
        image: certbot/certbot
        restart: always
        volumes:
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        depends_on:
            - nginx
        command: certonly --webroot -w /var/www/certbot --register-unsafely-without-email --force-renewal -d cs-studiengaenge.de --agree-tos
   
    postgres:
        container_name: cs_postgres
        image: postgres
        volumes:
            - ./data/db:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=db_name
            - POSTGRES_USER=db_user
            - POSTGRES_PASSWORD=db_password
        ports:
            - 5432
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U db_user -d db_name"]
            interval: 5s
            timeout: 5s
            retries: 5